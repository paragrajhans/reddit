{"version":3,"sources":["components/RedditCard/RedditCard.jsx","config.js","containers/home/Home.jsx","components/TopicBar/TopicBar.jsx","components/Topic/Topic.jsx","routes.js","App.js","index.js"],"names":["RedditCard","props","state","onClickTopic","this","className","onClick","leg","data","display_name","icon_img","src","React","Component","config","api","listUrl","subListUrl1","subListUrl2","MAX_ATTACHMENT_SIZE","Home","topicName","setState","redirect","history","push","pathname","topic","listsData","getRedditLists","axios","get","Config","then","response","tempData","children","catch","err","console","info","map","value","TopicBar","navigateToTopic","window","open","url","date","toLocaleDateString","Date","day","month","year","title","author","class","score","Topic","backHome","topicsDetails","getTopicDetails","location","log","subreddit","routes","path","exact","main","routeProps","App","basename","route","index","key","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"gVAqDeA,E,kDA1Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAST,IAAD,OACCC,EAAiBC,KAAKH,MAAtBE,aACR,OACE,kBAAC,WAAD,KACE,yBACEE,UAAU,eACVC,QAAS,WACPH,EAAa,EAAKF,MAAMM,IAAIC,KAAKC,gBAGnC,kBAAC,IAAD,CAAMJ,UAAU,QACd,kBAAC,IAAD,CAAUA,UAAU,aAClB,kBAAC,IAAD,CAAWA,UAAU,cAClBD,KAAKH,MAAMM,IAAIC,KAAKC,eAGzB,yBAAKJ,UAAU,iBACZD,KAAKH,MAAMM,IAAIC,KAAKE,SACnB,kBAAC,IAAD,CAAWC,IAAKP,KAAKH,MAAMM,IAAIC,KAAKE,WAEpC,0BACEL,UAAU,mD,GA/BHO,IAAMC,W,QCF3BC,EARQ,CACVC,IAAK,CACHC,QAAS,4DACTC,YAAa,4BACbC,YAAa,cAMF,eACbC,oBAAqB,KAClBL,GCkDUM,E,kDAvDb,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IAURE,aAAe,SAACkB,GACd,EAAKC,SACH,CACEC,UAAU,IAEZ,WACE,OAAO,EAAKtB,MAAMuB,QAAQC,KAAK,CAC7BC,SAAU,iBACVC,MAAON,QAjBb,EAAKnB,MAAQ,CACX0B,UAAW,IAHI,E,gEAQjBxB,KAAKyB,mB,uCAiBW,IAAD,OACfC,IACGC,IAAIC,EAAOjB,IAAIC,SACfiB,MAAK,SAACC,GACL,IAAIC,EAAWD,EAAS1B,KAAKA,KAAK4B,SAClC,EAAKd,SAAS,CACZM,UAAWO,OAGdE,OAAM,SAACC,GACNC,QAAQC,KAAKF,Q,+BAIT,IAAD,OACP,OACE,yBAAKjC,UAAU,gBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,cAAd,YAEDD,KAAKF,MAAM0B,UAAUa,KAAI,SAACC,GACzB,OAAO,kBAAC,EAAD,CAAYnC,IAAKmC,EAAOvC,aAAc,EAAKA,wB,GAhD3CS,IAAMC,WCgDV8B,G,8DAlDb,WAAY1C,GAAQ,IAAD,8BACjB,cAAMA,IAIR2C,gBAAkB,WAChBC,OAAOC,KAAK,EAAK7C,MAAMM,IAAIC,KAAKuC,MAJhC,EAAK7C,MAAQ,GAFI,E,uDASR8C,GACT,OAAY,MAARA,GAGoC,cAA5BA,EAAKC,oBAAb,GAFK,IAKTD,EAAO,IAAIE,KAAKF,IAETC,mBAAmB,QAAS,CAAEE,IAAK,YACxC,IACAH,EAAKC,mBAAmB,QAAS,CAAEG,MAAO,UAC1C,IACAJ,EAAKC,mBAAmB,QAAS,CAAEI,KAAM,c,+BAK3C,OACE,kBAAC,WAAD,KACE,yBAAKhD,UAAU,kBAAkBC,QAASF,KAAKwC,iBAC7C,yBAAKvC,UAAU,eAAeD,KAAKH,MAAMM,IAAIC,KAAK8C,OAClD,yBAAKjD,UAAU,qBACb,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,gCAChB,0BAAMA,UAAU,gBAAgBD,KAAKH,MAAMM,IAAIC,KAAK+C,SAGtD,yBAAKlD,UAAU,mBACb,0BAAMmD,MAAM,iCACZ,0BAAMnD,UAAU,gBACbD,KAAKH,MAAMM,IAAIC,KAAKiD,MAAQrD,KAAKH,MAAMM,IAAIC,KAAKiD,MAAQ,a,GAzClD7C,IAAMC,YC8Dd6C,E,kDA1Db,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IAWR0D,SAAW,WACT,EAAKrC,SAAS,IAAI,WAChB,OAAO,EAAKrB,MAAMuB,QAAQC,KAAK,CAC7BC,SAAU,gBAbd,EAAKxB,MAAQ,CACX0D,cAAe,GACfvC,UAAW,IAJI,E,gEASjBjB,KAAKyD,oB,wCAWY,IAAD,OAChB/B,IACGC,IACCjB,EAAOC,IAAIE,YACTb,KAAKH,MAAMuB,QAAQsC,SAASnC,MAC5Bb,EAAOC,IAAIG,aAEde,MAAK,SAACC,GACLK,QAAQwB,IAAI7B,GACZ,EAAKZ,SAAS,CACZsC,cAAe1B,EAAS1B,KAAKA,KAAK4B,SAClCf,UAAWa,EAAS1B,KAAKA,KAAK4B,SAAS,GAAG5B,KAAKwD,eAGlD3B,OAAM,SAACC,GACNC,QAAQC,KAAKF,Q,+BAKjB,OACE,yBAAKjC,UAAU,mBACb,yBAAKA,UAAU,UACb,0BACEA,UAAU,8CACVC,QAASF,KAAKuD,WAEhB,0BAAMtD,UAAU,SAASD,KAAKF,MAAMmB,YAEtC,yBAAKhB,UAAU,UACdD,KAAKF,MAAM0D,cAAcnB,KAAI,SAACC,GAC7B,OAAO,kBAAC,EAAD,CAAUnC,IAAKmC,Y,GApDZ9B,IAAMC,WCFboD,EAAS,CACpB,CACEC,KAAM,IACNC,OAAO,EACPC,KAAM,SAACC,GAAD,OAAgB,kBAAC,EAASA,KAElC,CACEH,KAAM,UACNC,OAAO,EACPC,KAAM,SAACC,GAAD,OAAgB,kBAAC,EAASA,KAElC,CACEH,KAAM,iBACNC,OAAO,EACPC,KAAM,SAACC,GAAD,OAAgB,kBAAC,EAAUA,M,gBCUtBC,E,uKArBX,OACE,kBAAC,IAAD,CAAeC,SAAS,WACtB,6BACE,6BACE,kBAAC,IAAD,KACGN,EAAOxB,KAAI,SAAC+B,EAAOC,GAAR,OACV,kBAAC,IAAD,CACEC,IAAKD,EACLP,KAAMM,EAAMN,KACZC,MAAOK,EAAML,MACbQ,OAAQH,EAAMJ,kB,GAZdxD,IAAMC,WCDxB+D,IAASD,OACP,kBAAC,IAAME,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b3ff05de.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport \"./RedditCard.scss\";\nimport \"@progress/kendo-theme-default/dist/all.css\";\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  CardImage,\n} from \"@progress/kendo-react-layout\";\n\nclass RedditCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // onClickTopic = (topic) => {\n  //   window.location.href = `/topic-details?topic=${topic}`;\n  // };\n\n  render() {\n    const { onClickTopic } = this.props;\n    return (\n      <Fragment>\n        <div\n          className=\"card-wrapper\"\n          onClick={() => {\n            onClickTopic(this.props.leg.data.display_name);\n          }}\n        >\n          <Card className=\"card\">\n            <CardBody className=\"card-body\">\n              <CardTitle className=\"card-title\">\n                {this.props.leg.data.display_name}\n              </CardTitle>\n            </CardBody>\n            <div className=\"img-container\">\n              {this.props.leg.data.icon_img ? (\n                <CardImage src={this.props.leg.data.icon_img} />\n              ) : (\n                <span\n                  className=\"k-icon k-i-image\n                  .k-i-photo empty-card\"\n                ></span>\n              )}\n            </div>\n          </Card>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default RedditCard;\n","const dev = {\n  api: {\n    listUrl: \"https://www.reddit.com/subreddits/popular.json?raw_json=1\",\n    subListUrl1: \"https://www.reddit.com/r/\",\n    subListUrl2: \"/hot.json\",\n  },\n};\n\nvar config = dev;\n\nexport default {\n  MAX_ATTACHMENT_SIZE: 5000000,\n  ...config,\n};\n","import React from \"react\";\nimport \"./Home.scss\";\nimport axios from \"axios\";\nimport RedditCard from \"../../components/RedditCard/RedditCard\";\nimport Config from \"../../../src/config.js\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listsData: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getRedditLists();\n  }\n\n  onClickTopic = (topicName) => {\n    this.setState(\n      {\n        redirect: true,\n      },\n      () => {\n        return this.props.history.push({\n          pathname: \"/topic-details\",\n          topic: topicName,\n        });\n      }\n    );\n  };\n\n  getRedditLists() {\n    axios\n      .get(Config.api.listUrl)\n      .then((response) => {\n        let tempData = response.data.data.children;\n        this.setState({\n          listsData: tempData,\n        });\n      })\n      .catch((err) => {\n        console.info(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"home-wrapper\">\n        <div className=\"landing-page\">\n          <div className=\"title-container\">\n            <h1 className=\"home-title\"> Topics</h1>\n          </div>\n          {this.state.listsData.map((value) => {\n            return <RedditCard leg={value} onClickTopic={this.onClickTopic} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Fragment } from \"react\";\nimport \"./TopicBar.scss\";\n\nclass TopicBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  navigateToTopic = () => {\n    window.open(this.props.leg.data.url);\n  };\n\n  formatDate(date) {\n    if (date == null) {\n      return \"\";\n    }\n    if (!typeof date.toLocaleDateString === \"function\") {\n      return \"\";\n    }\n    date = new Date(date);\n    return (\n      date.toLocaleDateString(\"en-US\", { day: \"numeric\" }) +\n      \"-\" +\n      date.toLocaleDateString(\"en-US\", { month: \"short\" }) +\n      \"-\" +\n      date.toLocaleDateString(\"en-US\", { year: \"numeric\" })\n    );\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"topic-container\" onClick={this.navigateToTopic}>\n          <div className=\"topic-title\">{this.props.leg.data.title}</div>\n          <div className=\"details-container\">\n            <div className=\"author-container\">\n              <span className=\"k-icon k-i-user author-icon\"></span>\n              <span className=\"topic-author\">{this.props.leg.data.author}</span>\n            </div>\n\n            <div className=\"likes-container\">\n              <span class=\"k-icon k-i-star k-i-bookmark\"></span>\n              <span className=\"created-date\">\n                {this.props.leg.data.score ? this.props.leg.data.score : \"-\"}\n              </span>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default TopicBar;\n","import React from \"react\";\nimport \"./Topic.scss\";\nimport axios from \"axios\";\nimport TopicBar from \"../TopicBar/TopicBar\";\nimport config from \"../../config\";\n\nclass Topic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topicsDetails: [],\n      topicName: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.getTopicDetails();\n  }\n\n  backHome = () => {\n    this.setState({}, () => {\n      return this.props.history.push({\n        pathname: \"/reddit\",\n      });\n    });\n  };\n\n  getTopicDetails() {\n    axios\n      .get(\n        config.api.subListUrl1 +\n          this.props.history.location.topic +\n          config.api.subListUrl2\n      )\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          topicsDetails: response.data.data.children,\n          topicName: response.data.data.children[0].data.subreddit,\n        });\n      })\n      .catch((err) => {\n        console.info(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"header\">\n          <span\n            className=\"k-icon k-i-arrow-chevron-left img-container\"\n            onClick={this.backHome}\n          ></span>\n          <span className=\"title\">{this.state.topicName}</span>\n        </div>\n        <div className=\"empty\"></div>\n        {this.state.topicsDetails.map((value) => {\n          return <TopicBar leg={value} />;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Topic;\n","import React from \"react\";\nimport Home from \"./containers/home/Home.jsx\";\nimport Topic from \"./components/Topic/Topic.jsx\";\n\nexport const routes = [\n  {\n    path: \"/\",\n    exact: true,\n    main: (routeProps) => <Home {...routeProps} />,\n  },\n  {\n    path: \"/reddit\",\n    exact: true,\n    main: (routeProps) => <Home {...routeProps} />,\n  },\n  {\n    path: \"/topic-details\",\n    exact: true,\n    main: (routeProps) => <Topic {...routeProps} />,\n  },\n];\n","import React from \"react\";\nimport { routes } from \"./routes\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport { Switch } from \"react-router\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter basename=\"/reddit\">\n        <div>\n          <div>\n            <Switch>\n              {routes.map((route, index) => (\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  render={route.main}\n                />\n              ))}\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}