{"version":3,"sources":["components/RedditCard/RedditCard.jsx","config.js","containers/home/Home.jsx","components/TopicBar/TopicBar.jsx","components/Topic/Topic.jsx","routes.js","App.js","index.js"],"names":["RedditCard","props","state","onClickTopic","this","className","onClick","leg","data","display_name","icon_img","src","React","Component","config","api","listUrl","subListUrl1","subListUrl2","MAX_ATTACHMENT_SIZE","Home","topicName","setState","redirect","history","push","pathname","topic","onChange","event","val","target","value","console","log","length","axios","get","then","res","tempReddits","children","map","opened","finalData","catch","err","listsData","subListsData","getRedditLists","Config","response","tempData","info","TopicBar","navigateToTopic","window","open","url","date","toLocaleDateString","Date","day","month","year","title","author","class","score","Topic","backHome","topicsDetails","getTopicDetails","location","subreddit","routes","path","exact","main","routeProps","App","basename","route","index","key","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9b4ee9e.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport \"./RedditCard.scss\";\nimport \"@progress/kendo-theme-default/dist/all.css\";\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  CardImage,\n} from \"@progress/kendo-react-layout\";\n\nclass RedditCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // onClickTopic = (topic) => {\n  //   window.location.href = `/topic-details?topic=${topic}`;\n  // };\n\n  render() {\n    const { onClickTopic } = this.props;\n    return (\n      <Fragment>\n        <div\n          className=\"card-wrapper\"\n          onClick={() => {\n            onClickTopic(this.props.leg.data.display_name);\n          }}\n        >\n          <Card className=\"card\">\n            <CardBody className=\"card-body\">\n              <CardTitle className=\"card-title\">\n                {this.props.leg.data.display_name}\n              </CardTitle>\n            </CardBody>\n            <div className=\"img-container\">\n              {this.props.leg.data.icon_img ? (\n                <CardImage src={this.props.leg.data.icon_img} />\n              ) : (\n                <span\n                  className=\"k-icon k-i-image\n                  .k-i-photo empty-card\"\n                ></span>\n              )}\n            </div>\n          </Card>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default RedditCard;\n","const dev = {\n  api: {\n    listUrl: \"https://www.reddit.com/subreddits/popular.json?raw_json=1\",\n    subListUrl1: \"https://www.reddit.com/r/\",\n    subListUrl2: \"/hot.json\",\n  },\n};\n\nvar config = dev;\n\nexport default {\n  MAX_ATTACHMENT_SIZE: 5000000,\n  ...config,\n};\n","import React from \"react\";\nimport \"./Home.scss\";\nimport axios from \"axios\";\nimport RedditCard from \"../../components/RedditCard/RedditCard\";\nimport { DropDownList, AutoComplete } from \"@progress/kendo-react-dropdowns\";\nimport { filterBy } from \"@progress/kendo-data-query\";\n\nimport Config from \"../../../src/config.js\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listsData: [],\n      subListsData: [],\n      value: \"\",\n      opened: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getRedditLists();\n  }\n\n  onClickTopic = (topicName) => {\n    this.setState(\n      {\n        redirect: true,\n      },\n      () => {\n        return this.props.history.push({\n          pathname: \"/topic-details\",\n          topic: topicName,\n        });\n      }\n    );\n  };\n\n  onChange = (event) => {\n    const val = event.target.value;\n    console.log(val);\n    if (event.target.value.length > 2) {\n      console.log(\"HERE\");\n      axios\n        .get(\n          \"https://www.reddit.com/subreddits/search.json?q=\" +\n            event.target.value +\n            \"&raw_json=1\"\n        )\n        .then((res) => {\n          let tempReddits = res.data.data.children.map((val) => {\n            return val.data.display_name;\n          });\n\n          this.setState({\n            opened: true,\n            finalData: tempReddits,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  getRedditLists() {\n    axios\n      .get(Config.api.listUrl)\n      .then((response) => {\n        let tempData = response.data.data.children;\n\n        this.setState({\n          listsData: tempData,\n        });\n      })\n      .catch((err) => {\n        console.info(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"home-wrapper\">\n        <div className=\"landing-page\">\n          <div className=\"title-container\">\n            <h1 className=\"home-title\"> Topics</h1>\n          </div>\n          <div className=\"search-container\">\n            <p>Search here : </p>\n            <AutoComplete\n              data={this.state.finalData}\n              onChange={this.onChange}\n            />\n          </div>\n\n          {this.state.listsData.map((value) => {\n            return <RedditCard leg={value} onClickTopic={this.onClickTopic} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Fragment } from \"react\";\nimport \"./TopicBar.scss\";\n\nclass TopicBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  navigateToTopic = () => {\n    window.open(this.props.leg.data.url);\n  };\n\n  formatDate(date) {\n    if (date == null) {\n      return \"\";\n    }\n    if (!typeof date.toLocaleDateString === \"function\") {\n      return \"\";\n    }\n    date = new Date(date);\n    return (\n      date.toLocaleDateString(\"en-US\", { day: \"numeric\" }) +\n      \"-\" +\n      date.toLocaleDateString(\"en-US\", { month: \"short\" }) +\n      \"-\" +\n      date.toLocaleDateString(\"en-US\", { year: \"numeric\" })\n    );\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"topic-container\" onClick={this.navigateToTopic}>\n          <div className=\"topic-title\">{this.props.leg.data.title}</div>\n          <div className=\"details-container\">\n            <div className=\"author-container\">\n              <span className=\"k-icon k-i-user author-icon\"></span>\n              <span className=\"topic-author\">{this.props.leg.data.author}</span>\n            </div>\n\n            <div className=\"likes-container\">\n              <span class=\"k-icon k-i-star k-i-bookmark\"></span>\n              <span className=\"created-date\">\n                {this.props.leg.data.score ? this.props.leg.data.score : \"-\"}\n              </span>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default TopicBar;\n","import React from \"react\";\nimport \"./Topic.scss\";\nimport axios from \"axios\";\nimport TopicBar from \"../TopicBar/TopicBar\";\nimport config from \"../../config\";\n\nclass Topic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topicsDetails: [],\n      topicName: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.getTopicDetails();\n  }\n\n  backHome = () => {\n    this.setState({}, () => {\n      return this.props.history.push({\n        pathname: \"/\",\n      });\n    });\n  };\n\n  getTopicDetails() {\n    axios\n      .get(\n        config.api.subListUrl1 +\n          this.props.history.location.topic +\n          config.api.subListUrl2\n      )\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          topicsDetails: response.data.data.children,\n          topicName: response.data.data.children[0].data.subreddit,\n        });\n      })\n      .catch((err) => {\n        console.info(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"header\">\n          <span\n            className=\"k-icon k-i-arrow-chevron-left img-container\"\n            onClick={this.backHome}\n          ></span>\n          <span className=\"title\">{this.state.topicName}</span>\n        </div>\n        <div className=\"empty\"></div>\n\n        {this.state.topicsDetails.map((value) => {\n          return <TopicBar leg={value} />;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Topic;\n","import React from \"react\";\nimport Home from \"./containers/home/Home.jsx\";\nimport Topic from \"./components/Topic/Topic.jsx\";\n\nexport const routes = [\n  {\n    path: \"/\",\n    exact: true,\n    main: (routeProps) => <Home {...routeProps} />,\n  },\n  {\n    path: \"/reddit\",\n    exact: true,\n    main: (routeProps) => <Home {...routeProps} />,\n  },\n  {\n    path: \"/topic-details\",\n    exact: true,\n    main: (routeProps) => <Topic {...routeProps} />,\n  },\n];\n","import React from \"react\";\nimport { routes } from \"./routes\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport { Switch } from \"react-router\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter basename=\"/reddit\">\n        <div>\n          <div>\n            <Switch>\n              {routes.map((route, index) => (\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  render={route.main}\n                />\n              ))}\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}